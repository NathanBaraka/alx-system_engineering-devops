#!/usr/bin/env bash

# Updating the package lists for available software packages.
apt-get update
# Installing the Nginx web server.
apt-get install -y nginx

# Creates the /etc/nginx/html directory, which will serve as the document root directory for Nginx.
mkdir /etc/nginx/html
# Creates an empty index.html file inside the /etc/nginx/html directory.
touch /etc/nginx/html/index.html
# Sets the content of the index.html file to "Hello World!" using the echo command.
echo "Hello World!" > /etc/nginx/html/index.html

# Configure the default Nginx server block
printf %s "server {
     listen      80 default_server;
     listen      [::]:80 default_server;
     root        /etc/nginx/html;
     index       index.html index.htm;

     # Custom 404 page
     error_page 404 /404.html;
     location = /404.html {
         root /etc/nginx/html;
         internal;
     }
}
" > /etc/nginx/sites-available/default

# Creates an empty file named 404.html inside the /etc/nginx/html directory.
touch /etc/nginx/html/404.html
# Paste a 404 response in the 404.html file
echo "Ceci n'est pas une page" | sudo tee /etc/nginx/html/404.html

# Create a configuration file for the redirection
echo "server {
    listen      80;
    listen      [::]:80;
    root        /etc/nginx/html;
    index       index.html index.htm;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    location /redirect_me {
        return 301 https://www.youtube.com/watch?v=QH2-TGUlwu4;
    }
}" | sudo tee /etc/nginx/sites-available/redirect_me

# Enable the new site configuration
sudo ln -s /etc/nginx/sites-available/redirect_me /etc/nginx/sites-enabled/

# Test nginx configuration and reload
sudo nginx -t
sudo service nginx reload

echo "Nginx installation and configuration completed."

